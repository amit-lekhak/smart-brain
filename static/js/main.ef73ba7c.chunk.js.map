{"version":3,"sources":["utility/helperFunctions.js","components/Loading/Loading.js","components/navlink/NavLink.js","containers/login/Login.js","App.js","serviceWorkerRegistration.js","index.js","components/card/Card.js"],"names":["fetchProfile","token","fetch","method","headers","Accept","authorization","then","res","json","catch","error","console","log","signoutUser","saveToken","window","sessionStorage","setItem","removeToken","removeItem","getToken","getItem","Loading","id","Avatar","React","lazy","NavLink","onRouteChange","route","updateUserState","user","style","marginBottom","className","Suspense","fallback","signoutHandler","onClick","Login","useState","email","setEmail","password","setPassword","onInputChangeHandler","e","field","target","name","value","onSubmit","preventDefault","body","JSON","stringify","response","data","loginUser","htmlFor","onChange","type","Register","Home","App","state","entries","joined","age","pet","options","particles","color","links","distance","enable","opacity","width","move","direction","outMode","random","speed","straight","number","density","value_area","setState","this","Card","textAlign","fontSize","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","children","classnames"],"mappings":"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","file":"static/js/main.ef73ba7c.chunk.js","sourcesContent":["const fetchProfile = (token) => {\n  return fetch(\"https://smartbrainapi-u3ff.onrender.com/api/profile\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => res.json())\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nconst signoutUser = (token) => {\n  return fetch(\"https://smartbrainapi-u3ff.onrender.com/api/logout\", {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => res.json())\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nconst saveToken = (token) => {\n  if (!token) return;\n  window &&\n    window.sessionStorage &&\n    window.sessionStorage.setItem(\"token\", token);\n};\n\nconst removeToken = () => {\n  window && window.sessionStorage && window.sessionStorage.removeItem(\"token\");\n};\n\nconst getToken = () => {\n  return (\n    window && window.sessionStorage && window.sessionStorage.getItem(\"token\")\n  );\n};\n\nexport { fetchProfile, saveToken, removeToken, getToken, signoutUser };\n","import React from \"react\";\nimport \"./Loading.styles.css\";\n\nconst Loading = () => {\n  return <div id=\"loading\"></div>;\n};\n\nexport default Loading;\n","import React from \"react\";\nimport {\n  removeToken,\n  signoutUser,\n  getToken,\n} from \"../../utility/helperFunctions\";\nimport Loading from \"../Loading/Loading\";\nimport \"./Navlink.styles.css\";\n\nconst Avatar = React.lazy(() =>\n  import(\"../../containers/profile/avatar/Avatar\")\n);\n\nconst NavLink = ({ onRouteChange, route, updateUserState, user }) => {\n  const signoutHandler = () => {\n    signoutUser(getToken());\n\n    removeToken();\n    updateUserState({ error: \"\", user: {}, route: \"login\" });\n  };\n\n  return (\n    <div style={{ marginBottom: \"20px\" }}>\n      <nav className=\"navlink\">\n        {route === \"home\" ? (\n          <React.Suspense fallback={Loading()}>\n            <Avatar\n              user={user}\n              updateUserState={updateUserState}\n              signoutHandler={signoutHandler}\n            />\n          </React.Suspense>\n        ) : (\n          <>\n            <p className=\"route\" onClick={() => onRouteChange(\"login\")}>\n              Sign in\n            </p>\n            <p className=\"route\" onClick={() => onRouteChange(\"register\")}>\n              Register\n            </p>\n          </>\n        )}\n      </nav>\n    </div>\n  );\n};\n\nexport default NavLink;\n","import React, { useState } from \"react\";\nimport \"./Login.styles.css\";\nimport { fetchProfile, saveToken } from \"../../utility/helperFunctions\";\n\nconst Login = ({ onRouteChange, updateUserState }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onInputChangeHandler = (e) => {\n    const field = e.target.name;\n    const value = e.target.value;\n    if (field === \"email\") {\n      setEmail(value);\n    } else if (field === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const loginUser = (email, password) => {\n    fetch(\"https://smartbrainapi-u3ff.onrender.com/api/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          return updateUserState({\n            error: data.error,\n            user: {},\n            route: \"login\",\n          });\n        }\n\n        const token = data.token;\n\n        setEmail(\"\");\n        setPassword(\"\");\n        saveToken(token);\n\n        fetchProfile(token)\n          .then((data) => {\n            if (data.error) {\n              return updateUserState({\n                error: data.error,\n                user: {},\n                route: \"login\",\n              });\n            }\n\n            return updateUserState({\n              error: \"\",\n              user: data.user,\n              route: \"home\",\n            });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    if (!email || !password) return;\n\n    loginUser(email, password);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">Sign In</h1>\n\n      <form onSubmit={onSubmitHandler}>\n        <div className=\"form-item\">\n          <label htmlFor=\"email\">\n            <h4>Email</h4>\n          </label>\n          <input\n            onChange={onInputChangeHandler}\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={email}\n          />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"password\">\n            <h4>Password</h4>\n          </label>\n          <input\n            onChange={onInputChangeHandler}\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n          />\n        </div>\n        <div className=\"form-item\">\n          <button type=\"submit\">\n            <h4>Sign in</h4>\n          </button>\n        </div>\n      </form>\n\n      <p className=\"route\" onClick={() => onRouteChange(\"register\")}>\n        Register\n      </p>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport Particles from \"react-tsparticles\";\nimport \"./App.css\";\nimport Card from \"./components/card/Card\";\nimport Navlink from \"./components/navlink/NavLink\";\nimport Login from \"./containers/login/Login\";\nimport { fetchProfile, getToken } from \"./utility/helperFunctions\";\nimport Loading from \"./components/Loading/Loading\";\n\nconst Register = React.lazy(() => import(\"./containers/register/Register\"));\nconst Home = React.lazy(() => import(\"./containers/home/Home\"));\n\nclass App extends React.Component {\n  state = {\n    route: \"login\",\n    error: \"\",\n    user: {\n      name: \"\",\n      entries: \"\",\n      id: \"\",\n      joined: \"\",\n      email: \"\",\n      age: \"\",\n      pet: \"\",\n    },\n  };\n\n  options = {\n    particles: {\n      color: {\n        value: \"#ffffff\",\n      },\n      links: {\n        color: \"#ffffff\",\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 1,\n      },\n\n      move: {\n        direction: \"none\",\n        enable: true,\n        outMode: \"bounce\",\n        random: false,\n        speed: 3,\n        straight: false,\n      },\n      number: {\n        density: {\n          enable: true,\n          value_area: 800,\n        },\n        value: 80,\n      },\n    },\n  };\n\n  componentDidMount() {\n    const token = getToken();\n\n    if (!token) return;\n\n    fetchProfile(token)\n      .then((data) => {\n        if (data.error) {\n          return this.updateUserState({\n            error: data.error,\n            user: {},\n            route: \"login\",\n          });\n        }\n\n        return this.updateUserState({\n          error: \"\",\n          user: data.user,\n          route: \"home\",\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  onRouteChange = (route) => {\n    if (this.state.route !== route) {\n      this.setState({ route: route, error: \"\" });\n    }\n  };\n\n  updateUserState = ({ error, user, route }) => {\n    this.setState({ error, user, route });\n  };\n\n  render() {\n    return (\n      <div>\n        <Particles className=\"particles\" options={this.options} />\n        <Navlink\n          updateUserState={this.updateUserState}\n          route={this.state.route}\n          user={this.state.user}\n          onRouteChange={this.onRouteChange}\n        />\n        {this.state.route === \"home\" ? (\n          <React.Suspense fallback={Loading()}>\n            <Home user={this.state.user} />\n          </React.Suspense>\n        ) : (\n          <Card>\n            {this.state.route === \"login\" ? (\n              <Login\n                updateUserState={this.updateUserState}\n                onRouteChange={this.onRouteChange}\n              />\n            ) : (\n              <React.Suspense fallback={Loading()}>\n                <Register\n                  updateUserState={this.updateUserState}\n                  onRouteChange={this.onRouteChange}\n                />\n              </React.Suspense>\n            )}\n          </Card>\n        )}\n        {this.state.error && (\n          <p style={{ color: \"red\", textAlign: \"center\", fontSize: \"2rem\" }}>\n            {this.state.error}\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n\n","import React from \"react\";\nimport \"./Card.styles.css\";\n\nconst Card = ({ children, classnames }) => {\n  return <div className={`card ${classnames}`}>{children}</div>;\n};\n\nexport default Card;\n"],"sourceRoot":""}