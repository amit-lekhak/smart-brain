{"version":3,"sources":["containers/register/Register.js"],"names":["Register","onRouteChange","updateUserState","useState","email","setEmail","password","setPassword","name","setName","onInputChangeHandler","e","field","target","value","className","onSubmit","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","data","error","user","route","saveToken","token","catch","console","log","registerUser","htmlFor","onChange","type","id","onClick"],"mappings":"oKAoHeA,UAhHE,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,gBACjC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAuB,SAACC,GAC5B,IAAMC,EAAQD,EAAEE,OAAOL,KACjBM,EAAQH,EAAEE,OAAOC,MACT,UAAVF,EACFP,EAASS,GACU,aAAVF,EACTL,EAAYO,GACO,SAAVF,GACTH,EAAQK,IA0CZ,OACE,qCACE,oBAAIC,UAAU,QAAd,sBAEA,uBAAMC,SAXc,SAACL,GACvBA,EAAEM,iBACGb,GAAUE,GAAaE,GAjCT,SAACJ,EAAOE,EAAUE,GACrCU,MAAM,uDAAwD,CAC5DC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEhB,OAAMJ,QAAOE,eAEnCmB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAIA,EAAKC,MACA3B,EAAgB,CACrB2B,MAAOD,EAAKC,MACZC,KAAM,GACNC,MAAO,cAIX1B,EAAS,IACTE,EAAY,IACZE,EAAQ,IAERuB,YAAUJ,EAAKK,OACR/B,EAAgB,CAAE2B,MAAO,GAAIC,KAAMF,EAAKE,KAAMC,MAAO,aAE7DG,OAAM,SAACL,GACNM,QAAQC,IAAIP,MAQhBQ,CAAajC,EAAOE,EAAUE,IAO5B,UACE,sBAAKO,UAAU,YAAf,UACE,uBAAOuB,QAAQ,OAAf,SACE,wCAEF,uBACEC,SAAU7B,EACV8B,KAAK,OACLhC,KAAK,OACLiC,GAAG,OACH3B,MAAON,OAIX,sBAAKO,UAAU,YAAf,UACE,uBAAOuB,QAAQ,QAAf,SACE,yCAEF,uBACEC,SAAU7B,EACV8B,KAAK,QACLhC,KAAK,QACLiC,GAAG,QACH3B,MAAOV,OAIX,sBAAKW,UAAU,YAAf,UACE,uBAAOuB,QAAQ,WAAf,SACE,4CAEF,uBACEC,SAAU7B,EACV8B,KAAK,WACLhC,KAAK,WACLiC,GAAG,WACH3B,MAAOR,OAGX,qBAAKS,UAAU,YAAf,SACE,wBAAQyB,KAAK,SAAb,SACE,iDAKN,mBAAGzB,UAAU,QAAQ2B,QAAS,kBAAMzC,EAAc,UAAlD","file":"static/js/9.2df1a58f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"../login/Login.styles.css\";\nimport { saveToken } from \"../../utility/helperFunctions\";\n\nconst Register = ({ onRouteChange, updateUserState }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const onInputChangeHandler = (e) => {\n    const field = e.target.name;\n    const value = e.target.value;\n    if (field === \"email\") {\n      setEmail(value);\n    } else if (field === \"password\") {\n      setPassword(value);\n    } else if (field === \"name\") {\n      setName(value);\n    }\n  };\n\n  const registerUser = (email, password, name) => {\n    fetch(\"https://smartbrainapi-u3ff.onrender.com/api/register\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ name, email, password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          return updateUserState({\n            error: data.error,\n            user: {},\n            route: \"register\",\n          });\n        }\n\n        setEmail(\"\");\n        setPassword(\"\");\n        setName(\"\");\n\n        saveToken(data.token);\n        return updateUserState({ error: \"\", user: data.user, route: \"home\" });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    if (!email || !password || !name) return;\n\n    registerUser(email, password, name);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">Register</h1>\n\n      <form onSubmit={onSubmitHandler}>\n        <div className=\"form-item\">\n          <label htmlFor=\"name\">\n            <h4>Name</h4>\n          </label>\n          <input\n            onChange={onInputChangeHandler}\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={name}\n          />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"email\">\n            <h4>Email</h4>\n          </label>\n          <input\n            onChange={onInputChangeHandler}\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={email}\n          />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"password\">\n            <h4>Password</h4>\n          </label>\n          <input\n            onChange={onInputChangeHandler}\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            value={password}\n          />\n        </div>\n        <div className=\"form-item\">\n          <button type=\"submit\">\n            <h4>Register</h4>\n          </button>\n        </div>\n      </form>\n\n      <p className=\"route\" onClick={() => onRouteChange(\"login\")}>\n        Login\n      </p>\n    </>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}